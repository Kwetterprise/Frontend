{
  "openapi": "3.0.1",
  "info": {
    "title": "AccountService",
    "version": "v1"
  },
  "paths": {
    "/TweetCommand": {
      "post": {
        "tags": [
          "TweetCommand"
        ],
        "summary": " (Auth)",
        "operationId": "TweetCommand",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostTweetRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PostTweetRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PostTweetRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TweetDtoOption"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TweetDtoOption"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TweetDtoOption"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      },
      "delete": {
        "tags": [
          "TweetCommand"
        ],
        "summary": " (Auth)",
        "operationId": "TweetCommand2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteTweetRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteTweetRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteTweetRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Option"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Option"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Option"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/TweetQuery/GetFromUser": {
      "get": {
        "tags": [
          "TweetQuery"
        ],
        "operationId": "GetFromUser",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TweetDtoPagedDataOption"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TweetDtoPagedDataOption"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TweetDtoPagedDataOption"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "PostTweetRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "author": {
            "type": "string",
            "format": "uuid"
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "parent": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        }
      },
      "AccountRole": {
        "type": "integer",
        "format": "int32",
        "enum": [
          0,
          1,
          2
        ]
      },
      "AccountDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "$ref": "#/components/schemas/AccountRole"
          },
          "profilePicture": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        }
      },
      "TweetDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "author": {
            "$ref": "#/components/schemas/AccountDto"
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "parentTweet": {
            "type": "string",
            "readOnly": true,
            "format": "uuid",
            "nullable": true
          }
        }
      },
      "TweetDtoOption": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "error": {
            "type": "string",
            "nullable": true
          },
          "hasFailed": {
            "type": "boolean"
          },
          "value": {
            "$ref": "#/components/schemas/TweetDto"
          }
        }
      },
      "ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "type": "object",
          "additionalProperties": false
        },
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "DeleteTweetRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "tweet": {
            "type": "string",
            "format": "uuid"
          },
          "actor": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "Option": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "error": {
            "type": "string",
            "nullable": true
          },
          "hasFailed": {
            "type": "boolean"
          }
        }
      },
      "TweetDtoPagedData": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "data",
          "pageNumber",
          "pageSize",
          "totalCount"
        ],
        "properties": {
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TweetDto"
            }
          }
        }
      },
      "TweetDtoPagedDataOption": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "error": {
            "type": "string",
            "nullable": true
          },
          "hasFailed": {
            "type": "boolean"
          },
          "value": {
            "$ref": "#/components/schemas/TweetDtoPagedData"
          }
        }
      }
    },
    "securitySchemes": {
      "oauth2": {
        "type": "apiKey",
        "description": "Standard Authorization header using the Bearer scheme. Example: \"bearer {token}\"",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}